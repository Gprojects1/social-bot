import asyncio
from aiogram import Bot, Dispatcher
import threading

from config import API_TOKEN, AI_AGENT_VIRTUAL_ID
from emotions.models import emotion_model
from handlers.message_handlers import setup_handlers
from moral_schemas.manager import MoralSchemaManager
from database.chat_db import chat_db


def admin_console():
    """–ö–æ–Ω—Å–æ–ª—å –∞–¥–º–∏–Ω–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã"""
    schema_manager = MoralSchemaManager()
    
    while True:
        print("\nüîí [ADMIN CONSOLE] –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1 - –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á–µ—Ç –æ–± –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö")
        print("2 - –ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ —Å—Ö–µ–º—ã")
        print("3 - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã")
        print("4 - –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —á–∞—Ç–∞")
        print("5 - –í—ã—Ö–æ–¥")
        
        try:
            choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: ").strip()
            
            if choice == "1":
                emotion_model.print_relations_report()
            
            elif choice == "2":
                if hasattr(schema_manager, 'print_active_schemas_report'):
                    schema_manager.print_active_schemas_report()
                else:
                    print("\n" + "="*70)
                    print("üìã –ê–ö–¢–ò–í–ù–´–ï –ú–û–†–ê–õ–¨–ù–´–ï –°–•–ï–ú–´")
                    print("="*70)
                    if schema_manager.active_schemas:
                        for (user1, user2), schema_key in schema_manager.active_schemas.items():
                            print(f"–°—Ö–µ–º–∞: {schema_key}")
                            print(f"–£—á–∞—Å—Ç–Ω–∏–∫–∏ (–≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ ID): {user1} ‚Üî {user2}")
                    else:
                        print("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ö–µ–º")
                    print("="*70)
            
            elif choice == "3":
                print(f"\nüîí [ADMIN] === –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ ===")
                print(f"üîí [ADMIN] –í—Å–µ–≥–æ –æ—Ç–Ω–æ—à–µ–Ω–∏–π: {len(emotion_model.relations)}")
                print(f"üîí [ADMIN] –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ö–µ–º: {len(schema_manager.active_schemas)}")
                
                virtual_ids = set()
                for (from_id, to_id) in emotion_model.relations.keys():
                    virtual_ids.add(from_id)
                    virtual_ids.add(to_id)
                
                print(f"üîí [ADMIN] –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏: {len(virtual_ids)}")
                print(f"üîí [ADMIN] –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π ID –∞–≥–µ–Ω—Ç–∞: {AI_AGENT_VIRTUAL_ID}")
                
            elif choice == "4":
                print("\n" + "="*70)
                print("üë• –£–ß–ê–°–¢–ù–ò–ö–ò –í–ò–†–¢–£–ê–õ–¨–ù–û–ì–û –ß–ê–¢–ê")
                print("="*70)
                
                participants = chat_db.get_all_participants()
                
                if not participants:
                    print("–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
                else:
                    for p in participants:
                        is_ai = " [ü§ñ –ò–ò –ê–ì–ï–ù–¢]" if p['virtual_id'] == AI_AGENT_VIRTUAL_ID else ""
                        print(f"Virtual ID {p['virtual_id']}: Telegram ID {p['telegram_id']} (@{p.get('username', 'Unknown')}){is_ai}")
                
                print("="*70)
            
            elif choice == "5":
                print("üîí [ADMIN] –í—ã—Ö–æ–¥ –∏–∑ –∫–æ–Ω—Å–æ–ª–∏")
                break
            
            else:
                print("üîí [ADMIN] –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
        
        except Exception as e:
            print(f"üîí [ADMIN] –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Å–æ–ª–∏ –∞–¥–º–∏–Ω–∞: {e}")
            import traceback
            traceback.print_exc()


async def main():
    # –£–ü–†–û–©–Å–ù–ù–û–ï –†–ï–®–ï–ù–ò–ï: —Å–æ–∑–¥–∞—ë–º –±–æ—Ç –±–µ–∑ –∫–∞—Å—Ç–æ–º–Ω–æ–π —Å–µ—Å—Å–∏–∏
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–∞–π–º–∞—É—Ç, –Ω–æ —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —á–µ—Ä–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    bot = Bot(token=API_TOKEN)
    dp = Dispatcher()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ò–ò –∞–≥–µ–Ω—Ç–∞ –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º —á–∞—Ç–µ
    from config import AI_AGENT_REAL_ID
    ai_virtual_id = chat_db.register_participant(AI_AGENT_REAL_ID, "AI_Agent")
    
    if ai_virtual_id != AI_AGENT_VIRTUAL_ID:
        print(f"‚ö†Ô∏è  [ADMIN] –í–ù–ò–ú–ê–ù–ò–ï: –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π ID –∞–≥–µ–Ω—Ç–∞ ({ai_virtual_id}) –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –æ–∂–∏–¥–∞–µ–º—ã–º ({AI_AGENT_VIRTUAL_ID})")
        print(f"‚ö†Ô∏è  [ADMIN] –û–±–Ω–æ–≤–∏—Ç–µ AI_AGENT_VIRTUAL_ID –≤ config.py –Ω–∞ {ai_virtual_id}")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    await setup_handlers(dp, bot)
    
    print("\n" + "="*70)
    print("üîí [ADMIN] ü§ñ –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —á–∞—Ç-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    print("="*70)
    print(f"üîí [ADMIN] –†–µ–∂–∏–º: –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —á–∞—Ç (—É—á–∞—Å—Ç–Ω–∏–∫–∏ –Ω–µ –∑–Ω–∞—é—Ç, –∫—Ç–æ –ò–ò)")
    print(f"üîí [ADMIN] –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π ID –∞–≥–µ–Ω—Ç–∞: {AI_AGENT_VIRTUAL_ID}")
    print(f"üîí [ADMIN] –í—Å—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –∞–¥–º–∏–Ω-–∫–æ–Ω—Å–æ–ª–∏")
    print("="*70)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Å–æ–ª—å –∞–¥–º–∏–Ω–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    admin_thread = threading.Thread(target=admin_console, daemon=True)
    admin_thread.start()
    
    try:
        print("üîí [ADMIN] –ë–æ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç polling...")
        # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: —É–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π request_timeout
        await dp.start_polling(
            bot, 
            skip_updates=True,
            polling_timeout=60,  # –¢–∞–π–º–∞—É—Ç –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            request_timeout=90   # –¢–∞–π–º–∞—É—Ç –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        )
    except Exception as e:
        print(f"üîí [ADMIN] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
    finally:
        await bot.session.close()


if __name__ == "__main__":
    # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –¥–ª—è Windows: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ProactorEventLoop
    if asyncio.sys.platform == 'win32':
        asyncio.set_event_loop_policy(asyncio.WindowsProactorEventLoopPolicy())
    
    asyncio.run(main())
