import asyncio
from aiogram import Bot, Dispatcher
import threading
import time

from config import API_TOKEN
from emotions.models import emotion_model
from handlers.message_handlers import setup_handlers
from moral_schemas.manager import MoralSchemaManager

def admin_console():
    """–ö–æ–Ω—Å–æ–ª—å –∞–¥–º–∏–Ω–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã"""
    schema_manager = MoralSchemaManager()
    
    while True:
        print("\nüîí [ADMIN CONSOLE] –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1 - –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á–µ—Ç –æ–± –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö")
        print("2 - –ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ —Å—Ö–µ–º—ã")
        print("3 - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã")
        print("4 - –í—ã—Ö–æ–¥")
        
        try:
            choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: ").strip()
            
            if choice == "1":
                emotion_model.print_relations_report()
            elif choice == "2":
                schema_manager.print_active_schemas_report()
            elif choice == "3":
                print(f"üîí [ADMIN] –í—Å–µ–≥–æ –æ—Ç–Ω–æ—à–µ–Ω–∏–π: {len(emotion_model.relations)}")
                print(f"üîí [ADMIN] –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ö–µ–º: {len(schema_manager.active_schemas)}")
                
                # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º
                user_ids = set()
                for (from_id, to_id) in emotion_model.relations.keys():
                    user_ids.add(from_id)
                    user_ids.add(to_id)
                user_ids.discard(-1)  # –£–±–∏—Ä–∞–µ–º –∞–≥–µ–Ω—Ç–∞
                print(f"üîí [ADMIN] –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: {len(user_ids)}")
                
            elif choice == "4":
                break
            else:
                print("üîí [ADMIN] –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
        except Exception as e:
            print(f"üîí [ADMIN] –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Å–æ–ª–∏ –∞–¥–º–∏–Ω–∞: {e}")

async def main():
    bot = Bot(token=API_TOKEN)
    dp = Dispatcher()
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    await setup_handlers(dp, bot)
    
    print("üîí [ADMIN] ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞")
    print("üîí [ADMIN] –í—Å—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è–º")
    print("üîí [ADMIN] –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω—Å–æ–ª–∏ –∞–¥–º–∏–Ω–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã –≤ –∫–æ–Ω—Å–æ–ª–∏")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Å–æ–ª—å –∞–¥–º–∏–Ω–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    admin_thread = threading.Thread(target=admin_console, daemon=True)
    admin_thread.start()
    
    try:
        await dp.start_polling(bot, skip_updates=True)
    except Exception as e:
        print(f"üîí [ADMIN] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")

if __name__ == "__main__":
    asyncio.run(main())